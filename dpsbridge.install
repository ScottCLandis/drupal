<?php

/**
 * @file
 * Install, update and uninstall functions of the DPSBridge module.
 */

/**
 * Implements hook_install().
 */
function dpsbridge_install() {
  dpsbridge_create_diretories();
  node_types_rebuild();
  $types = node_type_get_types();
  dpsbridge_add_custom_fields();
}

/**
 * Implements hook_uninstall().
 */
function dpsbridge_uninstall() {
  $folios = array('collection');
  $sql = 'SELECT nid FROM {node} n WHERE n.type IN (:types)';
  $result = db_query($sql, array(':types' => implode(',', $folios)));
  $node_ids = array();
  foreach ($result as $row) {
    $node_ids[] = $row->nid;
  }
  node_delete_multiple($node_ids);
  dpsbridge_delete_custom_fields();
  // node_type_delete('collection');
  field_purge_batch(500);
}

/**
 * Add Custom Fields.
 */
function dpsbridge_add_custom_fields() {
  // Install collection fields.
  foreach (_dpsbridge_install_collection_fields() as $field) {
    field_create_field($field);
  }
  // Install collection instances.
  foreach (_dpsbridge_installed_collection_instances() as $fieldinstance) {
    $fieldinstance['entity_type'] = 'node';
    $fieldinstance['bundle'] = 'collection';
    field_create_instance($fieldinstance);
  }
}

/**
 * Delete Custom Fields.
 */
function dpsbridge_delete_custom_fields() {
  // Delete collection fields.
  foreach (array_keys(_dpsbridge_install_collection_fields()) as $field) {
    field_delete_field($field);
  }
  // Delete collection instances.
  $collection_instances = field_info_instances('node', 'collection');
  foreach ($collection_instances as $instance_name) {
    field_delete_instance($instance_name);
  }
}

/**
 * Function to install Collection fields.
 */
function _dpsbridge_install_collection_fields() {
  $t = get_t();

  return array(
    'field_collection_short_title' => array(
      'field_name' => 'field_collection_short_title',
      'label' => $t('Collection Short Title'),
      'type' => 'text'),
    'field_collection_abstract' => array(
      'field_name' => 'field_collection_abstract',
      'label' => $t('Abstract'),
      'type' => 'text_long'),
    'field_collection_short_abstract' => array(
      'field_name' => 'field_collection_short_abstract',
      'label' => $t('Short Abstract'),
      'type' => 'text'),
    'field_collection_category' => array(
      'field_name' => 'field_collection_category',
      'label' => $t('Category'),
      'type' => 'text'),
    'field_collection_department' => array(
      'field_name' => 'field_collection_department',
      'label' => $t('Department'),
      'type' => 'text'),
    'field_collection_keywords' => array(
      'field_name' => 'field_collection_keywords',
      'label' => $t('Keywords'),
      'type' => 'text'),
    'field_collection_int_keywords' => array(
      'field_name' => 'field_collection_int_keywords',
      'label' => $t('Internal Keywords'),
      'type' => 'text'),
    'field_collection_reading_pos' => array(
      'field_name' => 'field_collection_reading_pos',
      'label' => $t('Reading Position'),
      'type' => 'list_text',
      'settings' => array(
        'allowed_values' => array(
          'retain' => 'Remember',
          'reset' => 'Reset',
        ),
        'allowed_values_function' => '',
      ),
    ),
    'field_collection_opento' => array(
      'field_name' => 'field_collection_opento',
      'label' => $t('Collection Open Default'),
      'type' => 'list_text',
      'settings' => array(
        'allowed_values' => array(
          'contentView' => 'Content View',
          'browsePage' => 'Browse Page',
        ),
        'allowed_values_function' => '',
      ),
    ),
    'field_collection_importance' => array(
      'field_name' => 'field_collection_importance',
      'label' => $t('Collection Importance'),
      'type' => 'list_text',
      'settings' => array(
        'allowed_values' => array(
          'normal' => 'Normal',
          'low' => 'Low',
          'high' => 'High',
        ),
        'allowed_values_function' => '',
      ),
    ),
    'field_collection_reference' => array(
      'field_name' => 'field_collection_reference',
      'label' => $t('Add content to collection'),
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type' => 'entityreference',
      'settings' => array(
        'handler' => 'base',
        'handler_settings' => array(
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
          ),
          'sort' => array(
            'direction' => 'DESC',
            'property' => 'nid',
            'type' => 'property',
          ),
          'target_bundles' => array(
            'article' => 'article',
          ),
        ),
        'target_type' => 'node',
      ),
    ),
    'field_collection_image_thumb' => array(
      'field_name' => 'field_collection_image_thumb',
      'label' => $t('Thumbnail Image'),
      'type' => 'image'),
    'field_collection_image_back' => array(
      'field_name' => 'field_collection_image_back',
      'label' => $t('Background Image'),
      'type' => 'image'),
    'field_collection_status' => array(
      'field_name' => 'field_collection_status',
      'label' => t(''),
      'type' => 'list_integer',
      'settings' => array(
        'allowed_values' => array(
          1 => t('Upload to Adobe Publish'),
        ),
      ),  
      'cardinality' => '-1'),
  );
}
/**
 * Function to install Collection instances.
 */
function _dpsbridge_installed_collection_instances() {
  $t = get_t();
  return array(
    'field_collection_short_title' => array(
      'field_name' => 'field_collection_short_title',
      'label' => $t('Collection Short Title'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Short Title (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_abstract' => array(
      'field_name' => 'field_collection_abstract',
      'label' => $t('Abstract'),
      'type' => 'text',
      'widget' => array(
        'settings' => array(
          'rows' => '5',
        ),
        'type' => 'text_textarea',
      ),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Abstract (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_short_abstract' => array(
      'field_name' => 'field_collection_short_abstract',
      'label' => $t('Short Abstract'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Short Abstract (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_category' => array(
      'field_name' => 'field_collection_category',
      'label' => $t('Category'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Category (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_department' => array(
      'field_name' => 'field_collection_department',
      'label' => $t('Department'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Department (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_keywords' => array(
      'field_name' => 'field_collection_keywords',
      'label' => $t('Keywords'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Keywords (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_int_keywords' => array(
      'field_name' => 'field_collection_int_keywords',
      'label' => $t('Internal Keywords'),
      'type' => 'text',
      'widget' => array(
        'type' => 'text_textfield'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Internal Keywords (Producer metadata)'),
          'type' => 'text'),
      ),
    ),
    'field_collection_reading_pos'  => array(
      'field_name' => 'field_collection_reading_pos',
      'label' => $t('Reading Position'),
      'type' => 'text',
      'widget' => array(
        'type' => 'options_select'),
      'required' => 1,
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Reading Position (Producer metadata)'),
          'type' => 'list_default'),
      ),
    ),
    'field_collection_opento' => array(
      'field_name' => 'field_collection_opento',
      'label' => $t('Collection Open Default'),
      'type' => 'text',
      'widget' => array(
        'type' => 'options_select'),
      'required' => 1,
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Collection Open Default (Producer metadata)'),
          'type' => 'list_default'),
      ),
    ),
    'field_collection_importance' => array(
      'field_name' => 'field_collection_importance',
      'label' => $t('Collection Importance'),
      'type' => 'list_text',
      'widget' => array(
        'type' => 'options_select'),
      'required' => 1,
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Collection Importance (Producer metadata)'),
          'type' => 'list_default'),
      ),
    ),
    'field_collection_reference' => array(
      'field_name' => 'field_collection_reference',
      'label' => $t('Add content to collection'),
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type' => 'entityreference',
      'widget' => array(
        'type' => 'autocomplete'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Add content to collection'),
          'type' => 'text'),
      ),
    ),
    'field_collection_image_thumb'  => array(
      'field_name' => 'field_collection_image_thumb',
      'label' => $t('Upload Thumbnail Image'),
      'type' => 'image',
      'widget' => array(
        'type' => 'image_image'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Collection Image (Producer images)'),
          'type' => 'image'),
      ),
    ),
    'field_collection_image_back' => array(
      'field_name' => 'field_collection_image_back',
      'label' => $t('Upload Background Image'),
      'type' => 'image',
      'widget' => array(
        'type' => 'image_image'),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Background Image (Producer images)'),
          'type' => 'image'),
      ),
    ),
    'field_collection_status' => array(
      'field_name' => 'field_collection_status',
      'label' => t(''),
      'type' => 'list_integer',
      'default_value' => array(1=>array('value'=>1)),
      'widget' => array(
        'type' => 'options_buttons',
        'weight' => '-1'),
      'display' => array(
        'example_node_list' => array(
          'label' => t('Upload to Adobe Publish'),
          'type' => 'list_default'),
        ),
    ),
    
  );
}
/**
 * Fucntion to get schema of dpsbridge_node_versions table.
 */
function _dpsbridge_schema_node_version() {
  $t = get_t();
  $schema['dpsbridge_node_versions'] = array(
    'description' => $t('Stores the version id of each node.'),
    'fields' => array(
      'nid' => array(
        'description' => $t('The node ID of the node.'),
        'type' => 'int',
        'not null' => TRUE, 
      ),
      'version_id' => array(
        'description' => $t('The lastest version id of the node.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'timestamp' => array(
        'description' => $t('The Unix timestamp when this version id was updated.'),
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}
/**
 * Implements hook_schema().
 */
function dpsbridge_schema() {
  return _dpsbridge_schema_node_version();
}